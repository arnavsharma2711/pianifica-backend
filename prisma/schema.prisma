// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  address     String?
  phone       String?
  email       String?
  website     String?
  status      String    @default("active")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  users User[]
}

model User {
  id                Int       @id @default(autoincrement())
  organizationId    Int
  firstName         String
  lastName          String?
  username          String    @unique
  email             String    @unique
  password          String
  profilePictureUrl String?
  phone             String?
  designation       String?
  verifiedAt        DateTime?
  lastLogin         DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?

  userRoles    UserRole[]
  Organization Organization @relation(fields: [organizationId], references: [id])
  UserToken    UserToken[]
}

enum TokenType {
  VERIFY_EMAIL
  RESET_PASSWORD
}

model UserToken {
  userId    Int
  token     String
  type      TokenType
  expiresAt DateTime
  createdAt DateTime  @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, type])
}

enum Role {
  SUPER_ADMIN
  ORG_SUPER_ADMIN
  ORG_ADMIN
  ORG_MEMBER
}

model UserRole {
  userId    Int
  role      Role     @default(ORG_MEMBER)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, role])
}
